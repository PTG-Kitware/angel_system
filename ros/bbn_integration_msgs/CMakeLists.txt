cmake_minimum_required( VERSION 3.5 )
project( bbn_integration_msgs )

# Default to C++14
if( NOT CMAKE_CXX_STANDARD )
  set( CMAKE_CXX_STANDARD 14 )
endif()

if( CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang" )
  add_compile_options( -Wall -Wextra -Wpedantic )
endif()

# find dependencies
find_package( ament_cmake REQUIRED )
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)
find_package( rosidl_default_generators REQUIRED )
find_package( builtin_interfaces REQUIRED )
find_package( std_msgs REQUIRED )

set( message_files
  # Add .msg files here
  msg/BBNCasualties.msg
  msg/BBNCasualtyCurrentlyWorkingOn.msg
  msg/BBNCurrentErrors.msg
  msg/BBNCurrentSkill.msg
  msg/BBNCurrentUserActions.msg
  msg/BBNCurrentUserState.msg
  msg/BBNHeader.msg
  msg/BBNNextStepProgress.msg
  msg/BBNSkillConfidence.msg
  msg/BBNSkillConfidenceList.msg
  msg/BBNSkillsDonePerCasualty.msg
  msg/BBNSkillsOpenPerCasualty.msg
  msg/BBNStepState.msg
  msg/BBNUpdate.msg
  )
set( service_files
  # Add .srv files here
  )
rosidl_generate_interfaces( ${PROJECT_NAME} ${message_files} ${service_files}
  DEPENDENCIES builtin_interfaces std_msgs
  )

if( BUILD_TESTING )
  find_package( ament_lint_auto REQUIRED )
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
