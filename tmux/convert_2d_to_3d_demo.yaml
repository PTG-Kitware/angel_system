#
# TODO
#

name: HL2SS Depth test
root: <%= ENV["ANGEL_WORKSPACE_DIR"] %>

# Optional tmux socket
# socket_name: foo

# Note that the pre and post options have been deprecated and will be replaced by
# project hooks.

# Project hooks

# Runs on project start, always
# on_project_start: command
on_project_start: |
  export ROS_NAMESPACE=${ROS_NAMESPACE:-/debug}
  export HL2_IP=${HL2_IP:-10.0.0.170}
  export CONFIG_DIR=${ANGEL_WORKSPACE_DIR}/src/angel_system_nodes/configs
  export MODEL_DIR=${ANGEL_WORKSPACE_DIR}/model_files
   # NOTE: CycloneDDS seems to work a lot better in this configuration for me (Josh).
  # With the default implementation (rmw_fastrtps_cpp), the object detector node
  # would freeze frequently. I have not seen it freeze with CycloneDDS... yet...
  export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp 


# Run on project start, the first time
# on_project_first_start: command

# Run on project start, after the first time
# on_project_restart: command

# Run on project exit ( detaching from tmux session )
# on_project_exit: command

# Run on project stop
# on_project_stop: command

# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.
# pre_window: rbenv shell 2.0.0-p247

# Pass command line options to tmux. Useful for specifying a different tmux.conf.
# tmux_options: -f ~/.tmux.mac.conf
tmux_options: -f <%= ENV["ANGEL_WORKSPACE_DIR"] %>/tmux/tmux.conf

# Change the command to call tmux.  This can be used by derivatives/wrappers like byobu.
# tmux_command: byobu

# Specifies (by name or index) which window will be selected on project startup. If not set, the first window is used.
# startup_window: editor

# Specifies (by index) which pane of the specified window will be selected on project startup. If not set, the first pane is used.
# startup_pane: 1

# Controls whether the tmux session should be attached to automatically. Defaults to true.
# attach: false

windows:
  - datahub: ros2 run ros_tcp_endpoint default_server_endpoint --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p ROS_IP:=0.0.0.0
  - hl2ss_bridge: ros2 run angel_system_nodes hl2ss_ros_bridge --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p ip_addr:=${HL2_IP}
      -p image_topic:=PVFramesBGR
      -p image_ts_topic:=disable
      -p hand_pose_topic:=disable
      -p audio_topic:=disable
      -p head_pose_topic:=HeadsetPoseData
      -p sm_topic:=disable
      -p rm_depth_AHAT:=disable
      -p rm_depth_LONGTHROW:=RMDepthLongThrow
      -p depth_head_pose_topic:=LTHeadPoseData
      -p pv_width:=760
      -p pv_height:=428
      -p pv_framerate:=30
      -p sm_freq:=5

  # Object detector
  #
  #- detector: ros2 run angel_system_nodes berkeley_object_detector --ros-args
  #    -r __ns:=${ROS_NAMESPACE}
  #    -p image_topic:=PVFramesBGR
  #    -p det_topic:=ObjectDetections2d
  #    -p det_conf_threshold:=0.4
  #    -p model_config:=${ANGEL_WORKSPACE_DIR}/angel_system/berkeley/configs/MC50-InstanceSegmentation/medical/M2/stage2/tourniquet_stage2_interstitial.yaml
  #    -p cuda_device_id:=0
  - object_detector: ros2 run angel_system_nodes object_detector_with_descriptors --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p image_topic:=PVFramesBGR
      -p descriptor_topic:=ObjectDetections2d
      -p min_time_topic:=ObjDetMinTime
      -p torch_device:=cuda:0
      -p detection_threshold:=0.50
      -p object_vocab_list:=${MODEL_DIR}/fasterrcnn_label_list.txt
      -p model_checkpoint:=${MODEL_DIR}/fasterrcnn_res101_vg.pth

  - hl2ss_test: ros2 run angel_system_nodes hl2ss_tester --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p depth_image_topic:=RMDepthLongThrow
      -p depth_head_pose_topic:=LTHeadPoseData
      -p head_pose_topic:=HeadsetPoseData
      -p det_topic:=ObjectDetections2d
      -p det_3d_topic:=ObjectDetections3d

  #
  #  # TEMP test to compare to spatial mapper
  #- spatial_mapper: ros2 run angel_system_nodes spatial_mapper --ros-args
  #    -r __ns:=${ROS_NAMESPACE}
  #    -p sm_topic:=SpatialMapData
  #    -p det_topic:=ObjectDetections2d
  #    -p det_3d_topic:=ObjectDetections3d
  #    -p headset_pose_topic:=HeadsetPoseData

  #- rqt_2d_detections: rqt -s rqt_image_view/ImageView
  #    --args ${ROS_NAMESPACE}/debug/pv_image_detections_2d
  #    --ros-args -p _image_transport:=compressed

  - feedback_generator: ros2 run angel_system_nodes feedback_generator --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p activity_detector_topic:=ActivityDetections
      -p object_detection_topic:=ObjectDetections3d
      -p task_monitor_topic:=TaskUpdates
      -p arui_update_topic:=AruiUpdates
      -p interp_user_intent_topic:=UserIntentPredicted
