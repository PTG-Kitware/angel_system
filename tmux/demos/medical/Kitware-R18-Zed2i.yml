#
# System configuration to run the ANGEL system for the Kitware system with the
# Kitware HL2 ARUI app.
#
# This configuration is for the R18 Chest Seal task.
#

name: Kitware-R18-Chest-Seal
root: <%= ENV["ANGEL_WORKSPACE_DIR"] %>

# Optional tmux socket
# socket_name: foo

# Note that the pre and post options have been deprecated and will be replaced by
# project hooks.

# Project hooks

# Runs on project start, always
# on_project_start: command
on_project_start: |
  export ROS_NAMESPACE=${ROS_NAMESPACE:-/kitware}
  export HL2_IP=${HL2_IP:-192.168.1.4}
  export CONFIG_DIR=${ANGEL_WORKSPACE_DIR}/config
  export NODE_CONFIG_DIR=${ANGEL_WORKSPACE_DIR}/src/angel_system_nodes/configs
  export MODEL_DIR=${ANGEL_WORKSPACE_DIR}/model_files

  # Changing the domain ID was important at KHQ to unblock perceived network
  # congestion slowdowns to message sending.
  export ROS_DOMAIN_ID=77

  # Topic to use from those emitted from the ZED Wrapper launch stack.
  # This name is *NOT* prepended with the common namespace.
  export ZED_IMAGE_TOPIC="zed/zed_node/rgb_raw/image_raw_color"
  # Expanding on the above, this is the topic for the timestamp extraction of
  # the images used.
  export ZED_IMAGE_TS_TOPIC="${ZED_IMAGE_TOPIC}_ts"

# Run on project start, the first time
# on_project_first_start: command

# Run on project start, after the first time
# on_project_restart: command

# Run on project exit ( detaching from tmux session )
# on_project_exit: command

# Run on project stop
# on_project_stop: command

# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.
# pre_window: rbenv shell 2.0.0-p247

# Pass command line options to tmux. Useful for specifying a different tmux.conf.
# tmux_options: -f ~/.tmux.mac.conf
tmux_options: -f <%= ENV["ANGEL_WORKSPACE_DIR"] %>/tmux/tmux.conf

windows:
  - sensor_zed:
      layout: even-vertical
      panes:
        # Read sensor input from a ZED 2i unit using the ROS2 wrapper.
        # NOTE: The camera name given cannot start with a "/" as the value
        # given is also used to prepend TF Frame IDs, which cannot begin with a
        # slash.
        - zed_bridge: ros2 launch zed_wrapper zed_camera.launch.py
            camera_name:="${ROS_NAMESPACE#/}"/zed
            camera_model:=zed2i
            ros_params_override_path:=${ANGEL_WORKSPACE_DIR}/config/zed_params_override.yaml
        # Enable sending ROS2 messages to receiving agents in an HoloLens2 app.
        - datahub: ros2 run ros_tcp_endpoint default_server_endpoint  --ros-args
            -r __ns:=${ROS_NAMESPACE}
            -p ROS_IP:=0.0.0.0
        # Trim out the timestamp of the image topic of choice.
        - run_image_timestamp: ros2 run angel_system_nodes image_timestamp_relay --ros-args
            -r __ns:=${ROS_NAMESPACE}
            -p image_topic:="${ZED_IMAGE_TOPIC}"
            -p output_topic:="${ZED_IMAGE_TS_TOPIC}"

  - pose_estimation: ros2 run angel_system_nodes pose_estimator --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p image_topic:=${ZED_IMAGE_TOPIC}
      -p det_topic:=pose_dets
      -p pose_topic:=PatientPose
      -p det_net_checkpoint:=${MODEL_DIR}/pose_estimation/pose_det_model.pth
      -p pose_net_checkpoint:=${MODEL_DIR}/pose_estimation/pose_model.pth
      -p det_config:=${ANGEL_WORKSPACE_DIR}/python-tpl/TCN_HPL/tcn_hpl/data/utils/pose_generation/configs/medic_pose.yaml
      -p pose_config:=${ANGEL_WORKSPACE_DIR}/python-tpl/TCN_HPL/tcn_hpl/data/utils/pose_generation/configs/ViTPose_base_medic_casualty_256x192.py
      -p cuda_device_id:=0

  - object_and_hand_detection: ros2 run angel_system_nodes object_and_hand_detector --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p image_topic:=${ZED_IMAGE_TOPIC}
      -p det_topic:=ObjectDetections2d
      -p object_net_checkpoint:=${MODEL_DIR}/object_detector/r18_det.pt
      -p inference_img_size:=768
      -p hand_net_checkpoint:=${MODEL_DIR}/object_detector/hands_model.pt
      -p cuda_device_id:=0

  - activity_classifier: ros2 run angel_system_nodes activity_classifier_tcn --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p image_ts_topic:=${ZED_IMAGE_TS_TOPIC}
      -p det_topic:=ObjectDetections2d
      -p pose_topic:=PatientPose
      -p model_weights:=${MODEL_DIR}/activity_classifier/r18_tcn.ckpt
      -p model_mapping:=${MODEL_DIR}/activity_classifier/r18_mapping.txt
      -p model_det_label_mapping:=${ANGEL_WORKSPACE_DIR}/config/object_labels/medical/r18.json
      -p act_topic:=activity_topic
      -p pose_repeat_rate:=7.5
      -p window_leads_with_objects:=true
      -p model_device:=0

  - task_monitor:
      layout: even-vertical
      panes:
        - gsp: ros2 run angel_system_nodes global_step_predictor --ros-args
            -r __ns:=${ROS_NAMESPACE}
            -p config_file:=${CONFIG_DIR}/tasks/medical/multi-task-config-medical-r18.yaml
            -p activity_config_file:=${CONFIG_DIR}/activity_labels/medical/r18.yaml
            -p task_state_topic:=TaskUpdates
            -p task_error_topic:=TaskErrors
            -p system_command_topic:=SystemCommands
            -p det_topic:=activity_topic
            -p model_file:=${MODEL_DIR}/task_monitor/global_step_predictor_act_avgs_R18.npy
            -p thresh_frame_count:=3
            -p deactivate_thresh_frame_count:=5
            -p threshold_multiplier_weak:=0.00
            -p threshold_frame_count_weak:=3
            -p step_mode:=granular
            -p query_task_graph_topic:=query_task_graph
        - echo: sleep 0.5 && ros2 topic echo --no-arr "${ROS_NAMESPACE}/TaskUpdates"

  - engineering-ui:
      layout: even-vertical
      panes:
        - simple_2d_overlay: ros2 run angel_utils Simple2dDetectionOverlay --ros-args
            -r __ns:=${ROS_NAMESPACE}
            -p topic_input_images:=${ZED_IMAGE_TOPIC}
            -p topic_input_det_2d:=ObjectDetections2d
            -p topic_input_joints:=PatientPose
            -p topic_output_images:=pv_image_detections_2d
            -p filter_top_k:=5
        - websocket: ros2 launch rosbridge_server rosbridge_websocket_launch.xml port:=9090
        - engineering_ui_server: node ros/angel_utils/multi_task_demo_ui/index.js
            --namespace=${ROS_NAMESPACE}
            --image_topic=pv_image_detections_2d/compressed
            --query_task_graph_topic=query_task_graph
            --task_updates_topic=TaskUpdates
            --activity_detections_topic=activity_topic
            --task_errors_topic=TaskErrors

  - feedback_generator: ros2 run angel_system_nodes feedback_generator --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p activity_detector_topic:=activity_topic
      -p object_detection_topic:=ObjectDetections3d
      -p task_monitor_topic:=TaskUpdates
      -p arui_update_topic:=AruiUpdates
      -p interp_user_intent_topic:=UserIntentPredicted
      -p system_text_response_topic:=SystemTextResponse
      -p system_notification_topic:=ARUISystemNotifications
