#
# Fragment of the system that includes data capture, object detection, and
# debug visualization of the detections in the image space.
#

name: 20220719-darpa-sitevisit-coffee-demo
root: <%= ENV["ANGEL_WORKSPACE_DIR"] %>

# Optional tmux socket
# socket_name: foo

# Note that the pre and post options have been deprecated and will be replaced by
# project hooks.

# Project hooks

# Runs on project start, always
# on_project_start: command
on_project_start: |
  export ROS_NAMESPACE=${ROS_NAMESPACE:-/angel}
  export HL2_IP=${HL2_IP:-192.168.1.101}
  export CONFIG_DIR=${ANGEL_WORKSPACE_DIR}/src/angel_system_nodes/configs

# Run on project start, the first time
# on_project_first_start: command

# Run on project start, after the first time
# on_project_restart: command

# Run on project exit ( detaching from tmux session )
# on_project_exit: command

# Run on project stop
# on_project_stop: command

# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.
# pre_window: rbenv shell 2.0.0-p247

# Pass command line options to tmux. Useful for specifying a different tmux.conf.
# tmux_options: -f ~/.tmux.mac.conf
tmux_options: -f <%= ENV["ANGEL_WORKSPACE_DIR"] %>/tmux/tmux.conf

# Change the command to call tmux.  This can be used by derivatives/wrappers like byobu.
# tmux_command: byobu

# Specifies (by name or index) which window will be selected on project startup. If not set, the first window is used.
# startup_window: editor

# Specifies (by index) which pane of the specified window will be selected on project startup. If not set, the first pane is used.
# startup_pane: 1

# Controls whether the tmux session should be attached to automatically. Defaults to true.
# attach: false

windows:
  - datahub: ros2 run ros_tcp_endpoint default_server_endpoint --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p ROS_IP:=0.0.0.0
  - image_converter: ros2 run angel_datahub ImageConverter --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p topic_input_images:=PVFramesNV12
      -p topic_output_images:=PVFramesRGB
  - activity_detector: ros2 run angel_system_nodes activity_detector --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p image_topic:=PVFramesRGB
      -p det_topic:=ActivityDetections
      -p use_cuda:=True
      -p frames_per_det:=64.0
      -p detector_config:=${CONFIG_DIR}/swinb_activity_det_config.json
  - task_monitor: ros2 run angel_system_nodes task_monitor --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p det_topic:=ActivityDetections
      -p task_update_topic:=TaskUpdates
      -p task_steps:=${CONFIG_DIR}/mit_ll_eval_one_coffee_recipe_steps.json
      -p task_trigger_thresholds:=${CONFIG_DIR}/mit_ll_eval_one_coffee_recipe_thresholds.json
#  - detector: ros2 run angel_system_nodes object_detector --ros-args
#      -r __ns:=${ROS_NAMESPACE}
#      -p image_topic:=PVFramesRGB
#      -p det_topic:=Detections
#      -p use_cuda:=true
#      -p detector_config:=${CONFIG_DIR}/default_object_det_config.json
#  - spatial_mapper: ros2 run angel_system_nodes spatial_mapper --ros-args
#      -r __ns:=${ROS_NAMESPACE}
#      -p spatial_map_topic:=SpatialMapData
#      -p det_topic:=Detections
#      -p det_3d_topic:=ObjectDetections3d
#      -p headset_pose_topic:=HeadsetPoseData
  - feedback_generator: ros2 run angel_system_nodes feedback_generator --ros-args
      -r __ns:=${ROS_NAMESPACE}
      -p activity_detector_topic:=ActivityDetections
      -p object_detection_topic:=ObjectDetections3d
      -p task_monitor_topic:=TaskUpdates
      -p arui_update_topic:=AruiUpdates
  # Display frames with relatively low latency (as opposed to device portal)
  - rqt_2d_detections: rqt -s rqt_image_view/ImageView
      --args ${ROS_NAMESPACE}/PVFramesRGB
      --ros-args -p _image_transport:=raw
