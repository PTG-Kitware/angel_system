[build-system]
requires = ["poetry-core==1.0.8"]
build-backend = "poetry.core.masonry.api"

###############################################################################

[tool.poetry]
name = "angel_system"
version = "0.1.0"
description = ""
authors = ["Kitware, Inc. <kitware@kitware.com>"]

[tool.poetry.dependencies]
python = "==3.8.10"
easydict = ">=1.9"
einops = ">=0.4.1"
hmmlearn = ">=0.2.8"
libtmux = ">=0.23.2"
langchain = "^0.0.223"
matplotlib = ">=3.5.1"
numpy = ">=1.22.2"
openai = "^0.27.8"
opencv-python = "^4.7.0.72"
openpyxl = "^3.0.10"
pandas = ">=1.4.3"
Pillow = "=9.1.0"
pyarrow = ">=9.0.0"  # for feature file support
pynput = "^1.7.6"
wheel = "<=0.43.0"
python-dotenv = ">=1.0.0"
pytorchvideo = "^0.1.5"
scikit-learn = "==1.2.1"
seaborn = ">=0.12.1"
simpleaudio = "^1.0.4"
smqtk-detection = ">=0.20.0"
timm = "^0.5.4"
transitions = ">=0.8.11"
trimesh = {extras = ["easy"], version = "^3.10.2"}
moviepy = "==1.0.3"
ultralytics = "==8.3.9"
rootutils = "==1.0.7"
torchmetrics = "==0.11.4"
rich = "==13.7.1"
chumpy = "==0.66"
#mmpose = "==0.24"
mmpose = {git = "https://github.com/periakiva/mmpose.git", branch="exp"}
mmcv = "==1.3.8"
torch = {url = "https://download.pytorch.org/whl/cu111/torch-1.9.1%2Bcu111-cp38-cp38-linux_x86_64.whl"}
torchvision = {url = "https://download.pytorch.org/whl/cu111/torchvision-0.10.1%2Bcu111-cp38-cp38-linux_x86_64.whl"}
detectron2 = {url = "https://dl.fbaipublicfiles.com/detectron2/wheels/cu111/torch1.9/detectron2-0.6%2Bcu111-cp38-cp38-linux_x86_64.whl"}
tensorrt = "==10.1.0"
tensorrt-cu12 = "==10.1.0"
tensorrt-cu12-bindings = "==10.1.0"
tensorrt-cu12-libs = "==10.1.0"

## For UHO Activity Classifier
## - see arisia: /data/dawei.du/ptg-activity-recognition/activity_hydra/requirements.txt
hydra-core = "==1.3.2"
#python-dotenv = "^0.21.0"
pytorch-lightning = "==1.7.7"

# Pinning setup tools to this known version due to torch 1.10.2 tensorboard
# functionality assuming `distutils.version.LooseVersion` functionality.
setuptools = "==59.5.0"

# For BBN Redis comms
websockets = "^11.0"

# For Berkeley classifier
cloudpickle = "^2.2.1"
iopath = ">=0.1.7,<0.1.10"
pycocotools = "^2.0.6"
future = "^0.18.3"
#omegaconf = ">=2.1,<=2.2.0"
black = "21.4b2"

# For Columbia ASR
nltk = "^3.8.1"
soundfile = "^0.12.1"
vadersentiment = "^3.3.2"
termcolor = "^2"

# For BBN ZMQ client
pyzmq = "==25.0.0"
kwcoco = ">=0.6.2"
kwimage = ">=0.9.18"
networkx = ">=3.1"


# TCN Activity classifier
hydra-colorlog = "^1.2.0"
tcn-hpl = {path = "python-tpl/TCN_HPL", develop = true}

# Yolo v7 object detection
yolov7 = {path = "python-tpl/yolov7", develop = true}

## ZED SDK Python Package
## Deduced from a manual installation of the ZED SDK, however the installation
## script uses the `--ignore-installed` option for `pip install`, which clobbers
## transitive dependency requirements of other packages specified here.
## Including the known wheel via URL is our best option to avoid this issue.
## This will need to be updated (or removed) if we change our platform or SDK
## version used.
#pyzed = {url = "https://download.stereolabs.com/zedsdk/4.1/whl/linux_x86_64/pyzed-4.1-cp38-cp38-linux_x86_64.whl"}

[tool.poetry.dev-dependencies]
ipython = "*"
# Docs
Sphinx = "*"
sphinx-rtd-theme = "*"
sphinx-prompt = "*"
livereload = "*"
# Jupyter dev support
jupyter = ">=1.0"
spyder-kernels = ">=2.4"
# Testing
black = "*"
click = "*,<8.1"  # latest black for python 3.8.10 is not compatible with click >=8.1
mypy = "*"
pytest = "*"
pytest-cov = "*"

[tool.poetry.scripts]
# Evaluation
ptg_eval_activity = "angel_system.ptg_eval.activity_classification.evaluate_activity:main"
ptg_eval_step = "angel_system.ptg_eval.step_completion.evaluate_step:main"

[tool.poetry.plugins."smqtk_plugins"]
# Activity detector
"angel_system.impls.detect_activities.pytorchvideo_slow_fast_r50" = "angel_system.impls.detect_activities.pytorchvideo_slow_fast_r50"
"angel_system.impls.detect_activities.swinb.swinb_detect_activities" = "angel_system.impls.detect_activities.swinb.swinb_detect_activities"
"angel_system.impls.detect_activities.two_stage.two_stage_detect_activities" = "angel_system.impls.detect_activities.two_stage.two_stage_detect_activities"

[tool.black]
line-length = 88
target-version = ['py38']
# 'extend-exclude' excludes files or directories in addition to the defaults
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
(
  ^/angel_system/berkeley
  | ^/angel_system/fasterrcnn
  | ^/python-tpl
  | ^/ros/(ROS-TCP-Endpoint|rosbag2|zed-ros2-wrapper)
  | ^/hl2ss
  | ^/install  # container-environment location derivative to source tree
)
'''

[tool.pytest.ini_options]
addopts = [
    "-lv",                                  # Show local in trace-backs.
    "--doctest-modules",                    # Increased verbosity.
    "--tb=long",                            # Trace-back print mode.
    "--ignore=./angel_system/berkeley",     # Ignore bundled package
    "--ignore=./angel_system/fasterrcnn",   # Ignore bundled package
    "--ignore=./angel_system/bbn_commandcom_client",   # Ignore bundled package
    "--cov=./angel_system",                 # Cover our package specifically
    "--cov=./tests",                        # Also cover our tests for dead spots
    "--cov-report=term",                    # Coverage report to terminal
    "--cov-report=xml:coverage.xml",        # for external tool reporting
]
testpaths = [
    "tests",
    "angel_system",
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
]
