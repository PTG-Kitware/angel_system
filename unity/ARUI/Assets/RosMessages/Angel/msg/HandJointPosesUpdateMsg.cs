//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Angel
{
    [Serializable]
    public class HandJointPosesUpdateMsg : Message
    {
        public const string k_RosMessageName = "angel_msgs/HandJointPosesUpdate";
        public override string RosMessageName => k_RosMessageName;

        // 
        //  Message that contains a snapshot of the hand joint poses
        //  that are provided by the HoloLens hand tracking provider.
        //  There are 26 tracked joints for each hand.
        //  Position and rotation are provided for each joint.
        // 
        public Std.HeaderMsg header;
        //  Timestamp of the source image these predictions pertain to.
        public BuiltinInterfaces.TimeMsg source_stamp;
        //  Which hand this update is for ('left' or 'right')
        public string hand;
        //  List of joints
        public HandJointPoseMsg[] joints;

        public HandJointPosesUpdateMsg()
        {
            this.header = new Std.HeaderMsg();
            this.source_stamp = new BuiltinInterfaces.TimeMsg();
            this.hand = "";
            this.joints = new HandJointPoseMsg[0];
        }

        public HandJointPosesUpdateMsg(Std.HeaderMsg header, BuiltinInterfaces.TimeMsg source_stamp, string hand, HandJointPoseMsg[] joints)
        {
            this.header = header;
            this.source_stamp = source_stamp;
            this.hand = hand;
            this.joints = joints;
        }

        public static HandJointPosesUpdateMsg Deserialize(MessageDeserializer deserializer) => new HandJointPosesUpdateMsg(deserializer);

        private HandJointPosesUpdateMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            this.source_stamp = BuiltinInterfaces.TimeMsg.Deserialize(deserializer);
            deserializer.Read(out this.hand);
            deserializer.Read(out this.joints, HandJointPoseMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.source_stamp);
            serializer.Write(this.hand);
            serializer.WriteLength(this.joints);
            serializer.Write(this.joints);
        }

        public override string ToString()
        {
            return "HandJointPosesUpdateMsg: " +
            "\nheader: " + header.ToString() +
            "\nsource_stamp: " + source_stamp.ToString() +
            "\nhand: " + hand.ToString() +
            "\njoints: " + System.String.Join(", ", joints.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
