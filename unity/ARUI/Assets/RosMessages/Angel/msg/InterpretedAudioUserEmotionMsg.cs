//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Angel
{
    [Serializable]
    public class InterpretedAudioUserEmotionMsg : Message
    {
        public const string k_RosMessageName = "angel_msgs/InterpretedAudioUserEmotion";
        public override string RosMessageName => k_RosMessageName;

        // 
        //  Message communicating an interpreted User Audio from an audio-based user
        //  utterance.
        // 
        //  The header primarily encapsulates when this message was emitted.
        //  The time component of this may be utilized as an identifier for this user
        //  intent and utterance.
        public Std.HeaderMsg header;
        //  Speech-to-text of the user utterance we have interpreted
        public string utterance_text;
        //  Canonical user emotion that has been interpreted. "Canonical" in this context
        //  is to mean that this string may be used as an identifier of this type of
        //  emotion
        public string user_emotion;
        //  Confidence we think this intent was targetted at the ANGEL system.
        //  Should be in the range [0,1] where 1.0 means absolute confidence the target is the ANGEL
        //  system and 0.0 is absolute confidence the target IS NOT the ANGEL system.
        public double confidence;

        public InterpretedAudioUserEmotionMsg()
        {
            this.header = new Std.HeaderMsg();
            this.utterance_text = "";
            this.user_emotion = "";
            this.confidence = 0.0;
        }

        public InterpretedAudioUserEmotionMsg(Std.HeaderMsg header, string utterance_text, string user_emotion, double confidence)
        {
            this.header = header;
            this.utterance_text = utterance_text;
            this.user_emotion = user_emotion;
            this.confidence = confidence;
        }

        public static InterpretedAudioUserEmotionMsg Deserialize(MessageDeserializer deserializer) => new InterpretedAudioUserEmotionMsg(deserializer);

        private InterpretedAudioUserEmotionMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.utterance_text);
            deserializer.Read(out this.user_emotion);
            deserializer.Read(out this.confidence);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.utterance_text);
            serializer.Write(this.user_emotion);
            serializer.Write(this.confidence);
        }

        public override string ToString()
        {
            return "InterpretedAudioUserEmotionMsg: " +
            "\nheader: " + header.ToString() +
            "\nutterance_text: " + utterance_text.ToString() +
            "\nuser_emotion: " + user_emotion.ToString() +
            "\nconfidence: " + confidence.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
